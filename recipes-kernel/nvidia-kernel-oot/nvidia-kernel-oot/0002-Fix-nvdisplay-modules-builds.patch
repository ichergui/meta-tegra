From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Matt Madison <matt@madison.systems>
Date: Thu, 14 Dec 2023 11:07:15 -0800
Subject: Fix nvdisplay modules builds

Update the makefiles, Kbuild, and conftest.sh script so
that headers and symbols from the out-of-tree drivers can
be found when building the display driver modules.

Signed-off-by: Matt Madison <matt@madison.systems>

diff --git a/Makefile b/Makefile
index 0eb9e45..3908df7 100644
--- a/Makefile
+++ b/Makefile
@@ -114,6 +114,7 @@ define display-cmd
 		KERNELRELEASE="" \
 		SYSSRC=$(KERNEL_SRC) \
 		SYSOUT=$(KBUILD_OUTPUT) \
+		OOTSRC=$(MAKEFILE_DIR)/nvidia-oot \
 		KBUILD_EXTRA_SYMBOLS=$(MAKEFILE_DIR)/nvidia-oot/Module.symvers \
 		SYSSRCHOST1X=$(MAKEFILE_DIR)/nvidia-oot/drivers/gpu/host1x/include \
 		CC="$(CC)" \
diff --git a/nvdisplay/kernel-open/Kbuild b/nvdisplay/kernel-open/Kbuild
index 2470c70..508eecf 100644
--- a/nvdisplay/kernel-open/Kbuild
+++ b/nvdisplay/kernel-open/Kbuild
@@ -70,6 +70,7 @@ $(foreach _module, $(NV_KERNEL_MODULES), \
 
 EXTRA_CFLAGS += -I$(src)/common/inc
 EXTRA_CFLAGS += -I$(src)
+EXTRA_CFLAGS += -I$(NV_OOT_SOURCES)/include
 EXTRA_CFLAGS += -Wall $(DEFINES) $(INCLUDES) -Wno-cast-qual -Wno-error -Wno-format-extra-args
 EXTRA_CFLAGS += -D__KERNEL__ -DMODULE -DNVRM
 EXTRA_CFLAGS += -DNV_VERSION_STRING=\"540.3.0\"
@@ -143,7 +144,7 @@ NV_CONFTEST_SCRIPT := $(src)/conftest.sh
 NV_CONFTEST_HEADER := $(obj)/conftest/headers.h
 
 NV_CONFTEST_CMD := /bin/sh $(NV_CONFTEST_SCRIPT) \
- "$(CC)" $(ARCH) $(NV_KERNEL_SOURCES) $(NV_KERNEL_OUTPUT)
+ "$(CC)" $(ARCH) $(NV_KERNEL_SOURCES) $(NV_KERNEL_OUTPUT) $(NV_OOT_SOURCES)
 
 NV_CFLAGS_FROM_CONFTEST := $(shell $(NV_CONFTEST_CMD) build_cflags)
 
@@ -204,8 +205,8 @@ $(eval $(call NV_GENERATE_COMPILE_TEST_HEADER,symbols,$(NV_CONFTEST_SYMBOL_COMPI
 $(eval $(call NV_GENERATE_COMPILE_TEST_HEADER,types,$(NV_CONFTEST_TYPE_COMPILE_TESTS)))
 
 $(obj)/conftest/patches.h: $(NV_CONFTEST_SCRIPT)
-	@mkdir -p $(obj)/conftest
-	@$(NV_CONFTEST_CMD) patch_check > $@
+	mkdir -p $(obj)/conftest
+	$(NV_CONFTEST_CMD) patch_check > $@
 
 
 # Each of these headers is checked for presence with a test #include; a
@@ -315,8 +316,8 @@ NV_HEADER_PRESENCE_PART = $(addprefix $(obj)/conftest/header_presence/,$(addsuff
 # Define a rule to check the header $(1).
 define NV_HEADER_PRESENCE_CHECK
  $$(call NV_HEADER_PRESENCE_PART,$(1)): $$(NV_CONFTEST_SCRIPT) $(obj)/conftest/uts_release
-	@mkdir -p $$(dir $$@)
-	@$$(NV_CONFTEST_CMD) test_kernel_header '$$(NV_CONFTEST_CFLAGS)' '$(1)' > $$@
+	mkdir -p $$(dir $$@)
+	$$(NV_CONFTEST_CMD) test_kernel_header '$$(NV_CONFTEST_CFLAGS)' '$(1)' > $$@
 endef
 
 # Evaluate the rule above for each header in the list.
@@ -324,7 +325,7 @@ $(foreach header,$(NV_HEADER_PRESENCE_TESTS),$(eval $(call NV_HEADER_PRESENCE_CH
 
 # Concatenate all of the parts into headers.h.
 $(obj)/conftest/headers.h: $(call NV_HEADER_PRESENCE_PART,$(NV_HEADER_PRESENCE_TESTS))
-	@cat $^ > $@
+	cat $^ > $@
 
 clean-dirs := $(obj)/conftest
 
@@ -346,7 +347,7 @@ BUILD_SANITY_CHECKS = \
 .PHONY: $(BUILD_SANITY_CHECKS)
 
 $(BUILD_SANITY_CHECKS):
-	@$(NV_CONFTEST_CMD) $@ full_output
+	$(NV_CONFTEST_CMD) $@ full_output
 
 # Perform all sanity checks before generating the conftest headers
 
diff --git a/nvdisplay/kernel-open/Makefile b/nvdisplay/kernel-open/Makefile
index d00c14b..0c416c9 100644
--- a/nvdisplay/kernel-open/Makefile
+++ b/nvdisplay/kernel-open/Makefile
@@ -73,6 +73,7 @@ else
   KBUILD_PARAMS += ARCH=$(ARCH)
   KBUILD_PARAMS += NV_KERNEL_SOURCES=$(KERNEL_SOURCES)
   KBUILD_PARAMS += NV_KERNEL_OUTPUT=$(KERNEL_OUTPUT)
+  KBUILD_PARAMS += NV_OOT_SOURCES=$(OOTSRC)
   KBUILD_PARAMS += NV_KERNEL_MODULES="$(NV_KERNEL_MODULES)"
   KBUILD_PARAMS += INSTALL_MOD_DIR=kernel/drivers/video
   KBUILD_PARAMS += NV_SPECTRE_V2=$(SPECTRE_V2_RETPOLINE)
diff --git a/nvdisplay/kernel-open/conftest.sh b/nvdisplay/kernel-open/conftest.sh
index c8fc35a..17ad3e3 100755
--- a/nvdisplay/kernel-open/conftest.sh
+++ b/nvdisplay/kernel-open/conftest.sh
@@ -11,6 +11,8 @@ ARCH=$2
 SOURCES=$3
 HEADERS=$SOURCES/include
 OUTPUT=$4
+OOT_SOURCES=$5
+OOT_HEADERS=$OOT_SOURCES/include
 XEN_PRESENT=1
 PREEMPT_RT_PRESENT=0
 
@@ -152,6 +154,8 @@ build_cflags() {
     CFLAGS="$CFLAGS -I$SOURCE_HEADERS/uapi"
     CFLAGS="$CFLAGS -I$SOURCE_HEADERS/xen"
     CFLAGS="$CFLAGS -I$OUTPUT_HEADERS/generated/uapi"
+    CFLAGS="$CFLAGS -I$OOT_HEADERS"
+    CFLAGS="$CFLAGS -I$OOT_HEADERS/uapi"
     CFLAGS="$CFLAGS -I$SOURCE_ARCH_HEADERS"
     CFLAGS="$CFLAGS -I$SOURCE_ARCH_HEADERS/uapi"
     CFLAGS="$CFLAGS -I$OUTPUT_ARCH_HEADERS/generated"
@@ -317,7 +321,7 @@ export_symbol_present_conftest() {
     TAB='	'
 
     if grep -e "${TAB}${SYMBOL}${TAB}.*${TAB}EXPORT_SYMBOL.*\$" \
-               "$OUTPUT/Module.symvers" >/dev/null 2>&1; then
+               "$OUTPUT/Module.symvers" "$OOT_SOURCES/Module.symvers" >/dev/null 2>&1; then
         echo "#define NV_IS_EXPORT_SYMBOL_PRESENT_$SYMBOL 1" |
             append_conftest "symbols"
     else
@@ -338,7 +342,7 @@ export_symbol_gpl_conftest() {
     TAB='	'
 
     if grep -e "${TAB}${SYMBOL}${TAB}.*${TAB}EXPORT_\(UNUSED_\)*SYMBOL_GPL\$" \
-               "$OUTPUT/Module.symvers" >/dev/null 2>&1; then
+               "$OUTPUT/Module.symvers" "$OOT_SOURCES/Module.symvers" >/dev/null 2>&1; then
         echo "#define NV_IS_EXPORT_SYMBOL_GPL_$SYMBOL 1" |
             append_conftest "symbols"
     else
@@ -6499,13 +6503,13 @@ compile_test() {
     esac
 }
 
-case "$5" in
+case "$6" in
     cc_sanity_check)
         #
         # Check if the selected compiler can create object files
         # in the current environment.
         #
-        VERBOSE=$6
+        VERBOSE=$7
 
         echo "int cc_sanity_check(void) {
             return 0;
@@ -6572,7 +6576,7 @@ case "$5" in
         #  In order to extract GCC version correctly for version strings
         #  like the last one above, we first check for x.y.z and if that
         #  fails, we fallback to x.y format.
-        VERBOSE=$6
+        VERBOSE=$7
 
         kernel_compile_h=$OUTPUT/include/generated/compile.h
 
@@ -6651,7 +6655,7 @@ case "$5" in
         # Check if the target kernel is a Xen kernel. If so, exit, since
         # the RM doesn't currently support Xen.
         #
-        VERBOSE=$6
+        VERBOSE=$7
 
         if [ -n "$IGNORE_XEN_PRESENCE" -o -n "$VGX_BUILD" ]; then
             exit 0
@@ -6683,7 +6687,7 @@ case "$5" in
         # Check if the target kernel has the PREEMPT_RT patch set applied. If
         # so, exit, since the RM doesn't support this configuration.
         #
-        VERBOSE=$6
+        VERBOSE=$7
 
         if [ -n "$IGNORE_PREEMPT_RT_PRESENCE" ]; then
             exit 0
@@ -6746,7 +6750,7 @@ case "$5" in
         # Run a series of compile tests to determine the set of interfaces
         # and features available in the target kernel.
         #
-        shift 5
+        shift 6
 
         CFLAGS=$1
         shift
@@ -6760,7 +6764,7 @@ case "$5" in
         #
         # Determine whether running in DOM0.
         #
-        VERBOSE=$6
+        VERBOSE=$7
 
         if [ -n "$VGX_BUILD" ]; then
             if [ -f /proc/xen/capabilities ]; then
@@ -6782,7 +6786,7 @@ case "$5" in
         #
         # Determine whether we are running a vGPU on KVM host.
         #
-        VERBOSE=$6
+        VERBOSE=$7
         iommu=CONFIG_VFIO_IOMMU_TYPE1
         mdev=CONFIG_VFIO_MDEV
         kvm=CONFIG_KVM_VFIO
@@ -6859,7 +6863,7 @@ case "$5" in
         #
         # Check to see if the given config option is set.
         #
-        OPTION=$6
+        OPTION=$7
 
         test_configuration_option $OPTION
         exit $?
@@ -6869,7 +6873,7 @@ case "$5" in
         #
         # Get the value of the given config option.
         #
-        OPTION=$6
+        OPTION=$7
 
         get_configuration_option $OPTION
         exit $?
@@ -6904,9 +6908,9 @@ case "$5" in
         # Check for the availability of the given kernel header
         #
 
-        CFLAGS=$6
+        CFLAGS=$7
 
-        test_header_presence "${7}"
+        test_header_presence "${8}"
 
         exit $?
     ;;
-- 
2.34.1

